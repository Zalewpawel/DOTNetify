{
	"$schema": "https://json.schemastore.org/eslintrc.json",
	"plugins": ["@typescript-eslint", "import", "simple-import-sort"],
	"parserOptions": {
		"project": "tsconfig.json"
	},
	"extends": [
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:import/recommended",
		"plugin:import/typescript",
		"prettier",
		"next/core-web-vitals"
	],
	"rules": {
		"import/no-mutable-exports": "error",
		"simple-import-sort/imports": "error",
		"simple-import-sort/exports": "error",
		"import/first": "error",
		"import/no-duplicates": ["error", { "prefer-inline": true }],
		"import/no-cycle": "error",
		"import/no-default-export": "error",
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{
				"prefer": "type-imports",
				"fixStyle": "inline-type-imports",
				"disallowTypeAnnotations": false
			}
		],
		"import/namespace": ["off"],
		"no-empty-pattern": "off",
		"@typescript-eslint/no-empty-interface": "off",
		"@typescript-eslint/no-empty-function": "off",
		"@typescript-eslint/require-await": "off",
		"@typescript-eslint/return-await": ["error", "in-try-catch"],
		"@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }],
		"@typescript-eslint/restrict-template-expressions": [
			"error",
			{ "allowNumber": true, "allowBoolean": true }
		],
		"@typescript-eslint/no-misused-promises": [
			"error",
			{
				"checksVoidReturn": {
					"attributes": false
				}
			}
		],
		"no-restricted-imports": [
			"error",
			{
				"name": "next/router",
				"message": "Please use next/navigation instead"
			}
		]
	},
	"overrides": [
		{
			"files": [
				"src/app/**/page.tsx",
				"src/app/**/layout.tsx",
				"src/middleware.ts",
				"tailwind.config.ts",
				"next.config.ts"
			],
			"rules": {
				"import/no-default-export": "off"
			}
		},
		{
			"files": ["src/**/*.ts?(x)"],
			"rules": {
				"simple-import-sort/imports": [
					"error",
					{
						"groups": [
							["^react", "^@?\\w"],
							["^next", "^@?\\w"],
							["^(@|components|hooks|lib|types)(/.*|$)"],
							["^\\u0000"],
							["^\\.\\.(?!/?$)", "^\\.\\./?$"],
							["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
							["^.+\\.s?css$"]
						]
					}
				]
			}
		}
	],
	"ignorePatterns": ["*.js", "*.jsx", "*.mjs"]
}
